<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PTPusher.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PTPusher</TokenIdentifier>
			<Abstract>A PTPusher object provides a high level API for communicating with the Pusher service.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTPusher/delegate</TokenIdentifier>
			<Abstract>The object that acts as the delegate for the receiving instance.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;PTPusherDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTPusher/reconnectAutomatically</TokenIdentifier>
			<Abstract>Indicates whether the client should attempt to reconnect automatically when disconnected
or if the connection failed.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, getter=shouldReconnectAutomatically) BOOL reconnectAutomatically</Declaration>
			
			
			<Anchor>//api/name/reconnectAutomatically</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTPusher/reconnectDelay</TokenIdentifier>
			<Abstract>Specifies the delay between reconnection attempts. Defaults to 5 seconds.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval reconnectDelay</Declaration>
			
			
			<Anchor>//api/name/reconnectDelay</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTPusher/connection</TokenIdentifier>
			<Abstract>The connection object for this client.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) PTPusherConnection *connection</Declaration>
			
			
			<Anchor>//api/name/connection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTPusher/authorizationURL</TokenIdentifier>
			<Abstract>The authorization URL for private subscriptions.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSURL *authorizationURL</Declaration>
			
			
			<Anchor>//api/name/authorizationURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PTPusher/pusherWithKey:delegate:</TokenIdentifier>
			<Abstract>Returns a new PTPusher instance with a connection configured with the given key.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>+ (id)pusherWithKey:(NSString *)key delegate:(id&lt;PTPusherDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Your application's API key. It can be found in the API Access section of your application within the Pusher user dashboard.</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract>The delegate for this instance</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pusherWithKey:delegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PTPusher/pusherWithKey:delegate:encrypted:</TokenIdentifier>
			<Abstract>Returns a new PTPusher instance with a connection configured with the given key.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>+ (id)pusherWithKey:(NSString *)key delegate:(id&lt;PTPusherDelegate&gt;)delegate encrypted:(BOOL)isEncrypted</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Your application's API key. It can be found in the API Access section of your application within the Pusher user dashboard.</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract>The delegate for this instance</Abstract>
				</Parameter><Parameter>
					<Name>isEncrypted</Name>
					<Abstract>If yes, a secure connection over SSL will be established.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pusherWithKey:delegate:encrypted:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PTPusher/pusherWithKey:connectAutomatically:</TokenIdentifier>
			<Abstract>Initialises a new PTPusher instance with a connection configured with the given key.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>+ (id)pusherWithKey:(NSString *)key connectAutomatically:(BOOL)connectAutomatically</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Your application's API key. It can be found in the API Access section of your application within the Pusher user dashboard.</Abstract>
				</Parameter><Parameter>
					<Name>connect</Name>
					<Abstract>Automatically If YES, the connection will be connected on initialisation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pusherWithKey:connectAutomatically:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PTPusher/pusherWithKey:connectAutomatically:encrypted:</TokenIdentifier>
			<Abstract>Initialises a new PTPusher instance with a connection configured with the given key.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>+ (id)pusherWithKey:(NSString *)key connectAutomatically:(BOOL)connectAutomatically encrypted:(BOOL)isEncrypted</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>Your application's API key. It can be found in the API Access section of your application within the Pusher user dashboard.</Abstract>
				</Parameter><Parameter>
					<Name>connectAutomatically</Name>
					<Abstract>If YES, the connection will be connected on initialisation.</Abstract>
				</Parameter><Parameter>
					<Name>isEncrypted</Name>
					<Abstract>If yes, a secure connection over SSL will be established.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/pusherWithKey:connectAutomatically:encrypted:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/connect</TokenIdentifier>
			<Abstract>Establishes a connection to the Pusher server.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (void)connect</Declaration>
			
			
			<Anchor>//api/name/connect</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/disconnect</TokenIdentifier>
			<Abstract>Disconnects from the Pusher server.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (void)disconnect</Declaration>
			
			
			<Anchor>//api/name/disconnect</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/subscribeToChannelNamed:</TokenIdentifier>
			<Abstract>Subscribes to the named channel.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (PTPusherChannel *)subscribeToChannelNamed:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the channel to subscribe to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/subscribeToChannelNamed:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/subscribeToPrivateChannelNamed:</TokenIdentifier>
			<Abstract>Subscribes to the named private channel.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (PTPusherPrivateChannel *)subscribeToPrivateChannelNamed:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the channel (without the private prefix) to subscribe to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/subscribeToPrivateChannelNamed:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/subscribeToPresenceChannelNamed:</TokenIdentifier>
			<Abstract>Subscribes to the named presence channel.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (PTPusherPresenceChannel *)subscribeToPresenceChannelNamed:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the channel (without the presence prefix) to subscribe to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/subscribeToPresenceChannelNamed:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/subscribeToPresenceChannelNamed:delegate:</TokenIdentifier>
			<Abstract>Subscribes to the named presence channel.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (PTPusherPresenceChannel *)subscribeToPresenceChannelNamed:(NSString *)name delegate:(id&lt;PTPusherPresenceChannelDelegate&gt;)presenceDelegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the channel (without the presence prefix) to subscribe to.</Abstract>
				</Parameter><Parameter>
					<Name>presenceDelegate</Name>
					<Abstract>The presence delegate for this channel.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/subscribeToPresenceChannelNamed:delegate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/unsubscribeFromChannel:</TokenIdentifier>
			<Abstract>Unsubscribes from the specified channel.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (void)unsubscribeFromChannel:(PTPusherChannel *)channel</Declaration>
			<Parameters>
				<Parameter>
					<Name>channel</Name>
					<Abstract>The channel to unsubscribe from.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/unsubscribeFromChannel:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/channelNamed:</TokenIdentifier>
			<Abstract>Returns a previously subscribed channel with the given name.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (PTPusherChannel *)channelNamed:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the channel required.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/channelNamed:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTPusher/sendEventNamed:data:channel:</TokenIdentifier>
			<Abstract>Sends an event directly over the connection's socket.</Abstract>
			<DeclaredIn>PTPusher.h</DeclaredIn>			
			
			<Declaration>- (void)sendEventNamed:(NSString *)name data:(id)data channel:(NSString *)channelName</Declaration>
			
			
			<Anchor>//api/name/sendEventNamed:data:channel:</Anchor>
		</Token>
		
	</File>
</Tokens>